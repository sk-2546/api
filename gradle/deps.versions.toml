[versions]
kotlin = "2.2.10"
jbCompose = "1.9.0-beta03"
androidGradle = "8.11.0"
coroutines = "1.10.2"
ktLint = "13.0.0"
spotless = "7.2.1"
mosaic = "0.12.0"
koin = "4.1.0"
kermit = "2.0.6"
ktor = "3.2.3"
kotlinxSerialization = "1.9.0"
sqliteJdbcDriver = "3.50.3.0"
composeWebView = "1.9.20"
slf4j = "2.0.17"
i18n4k = "0.11.0"
cache4k = "0.14.0"
decompose = "3.3.0"
essenty = "2.5.0"
multiplatformSettings = "1.3.0"
mviKotlin = "4.3.0"
accompanist = "0.34.0"
statelyVersion = "2.1.0"
statelyIsoVersion = "2.1.0"
androidxLifecycle = "2.9.2"
androidxMedia3 = "1.8.0"
okio = "3.16.0"
arrow = "2.1.2"
paging = "3.3.0-alpha02-0.5.1"
konnection = "1.4.5"
nexusGradle = "2.0.0"
zipline = "1.22.0-CUSTOM"
jna = "5.17.0"
coil = "3.3.0"
googleCreds = "1.5.0"
filekit = "0.10.0"
#noinspection GradleDependency
sqlDelight = "2.1.0"
androidGlance = "1.1.1"
mokoResources = "0.25.0"
mavenPublish = "0.34.0"
desugar = "2.1.5"

[libraries]
soundbound-extensions-lib = { group = "io.github.shabinder", name = "soundbound-extensions-lib", version = "0.25" }
soundbound-extensions-loader = { group = "io.github.shabinder", name = "soundbound-extension-loader", version = "3.5.0" }
soundbound-compose = { group = "io.github.shabinder", name = "compose", version = "1.0.0" }

clarity = { group = "com.microsoft.clarity", name = "clarity", version = "3.4.4" }
kache = { group = "com.mayakapps.kache", name = "kache", version = "2.1.1" }
multiplatform-webView = { group = "io.github.kevinnzou", name = "compose-webview-multiplatform", version.ref = "composeWebView" }

kmp-io-zip = { group = "io.github.skolson", name = "kmp-io", version = "0.2.3" }
androidx-sqlite-framework = { group = "androidx.sqlite", name = "sqlite-framework", version = "2.5.2" }
android-play-ads = { group = "com.google.android.gms", name = "play-services-ads", version = "24.1.0" }
restart4j = { group = "com.github.Dansoftowner", name = "Restart4j", version = "1.4.7" }
sentry-kmp = { group = "io.sentry", name = "sentry-kotlin-multiplatform", version = "0.18.0" }

kotlin-kotlinGradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-serialization = { group = "org.jetbrains.kotlin", name = "kotlin-serialization", version.ref = "kotlin" }
kotlin-kotlinTest = { group = "org.jetbrains.kotlin", name = "kotlin-test", version.ref = "kotlin" }
kotlin-kotlinTestCommon = { group = "org.jetbrains.kotlin", name = "kotlin-test-common", version.ref = "kotlin" }
kotlin-kotlinTestJs = { group = "org.jetbrains.kotlin", name = "kotlin-test-js", version.ref = "kotlin" }
kotlin-kotlinTestJunit = { group = "org.jetbrains.kotlin", name = "kotlin-test-junit", version.ref = "kotlin" }
kotlin-kotlinTestAnnotationsCommon = { group = "org.jetbrains.kotlin", name = "kotlin-test-annotations-common", version.ref = "kotlin" }
kotlin-kotlinTestCoroutine = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "coroutines" }
kotlinx-coroutines = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutinesGuava = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-guava", version.ref = "coroutines" }
kotlinx-serialization-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-core", version.ref = "kotlinxSerialization" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinxSerialization" }
kotlinx-atomicfu = { group = "org.jetbrains.kotlinx", name = "atomicfu", version = "0.29.0" }
kotlinx-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version = "0.7.1" }
kotlinx-immutableLists = { group = "org.jetbrains.kotlinx", name = "kotlinx-collections-immutable", version = "0.4.0" }

kotlin-compose-gradle = { group = "org.jetbrains.compose", name = "compose-gradle-plugin", version.ref = "jbCompose" }
mosaic-gradle = { group = "com.jakewharton.mosaic", name = "mosaic-gradle-plugin", version.ref = "mosaic" }

molecule = { group = "app.cash.molecule", name = "molecule-runtime", version = "2.1.0" }

essenty-lifecycle = { group = "com.arkivanov.essenty", name = "lifecycle", version.ref = "essenty" }
essenty-instanceKeeper = { group = "com.arkivanov.essenty", name = "instance-keeper", version.ref = "essenty" }
essenty-parcelable = { group = "com.arkivanov.essenty", name = "parcelable", version.ref = "essenty" }
essenty-backHandler = { group = "com.arkivanov.essenty", name = "back-handler", version.ref = "essenty" }
essenty-stateKeeper = { group = "com.arkivanov.essenty", name = "state-keeper", version.ref = "essenty" }
essenty-lifecycle-coroutines = { group = "com.arkivanov.essenty", name = "lifecycle-coroutines", version.ref = "essenty" }

decompose-dep = { group = "com.arkivanov.decompose", name = "decompose", version.ref = "decompose" }
decompose-extensions-compose = { group = "com.arkivanov.decompose", name = "extensions-compose", version.ref = "decompose" }

mviKotlin-dep = { group = "com.arkivanov.mvikotlin", name = "mvikotlin", version.ref = "mviKotlin" }
mviKotlin-rx = { group = "com.arkivanov.mvikotlin", name = "rx", version.ref = "mviKotlin" }
mviKotlin-main = { group = "com.arkivanov.mvikotlin", name = "mvikotlin-main", version.ref = "mviKotlin" }
mviKotlin-coroutines = { group = "com.arkivanov.mvikotlin", name = "mvikotlin-extensions-coroutines", version.ref = "mviKotlin" }
mviKotlin-keepers = { group = "com.arkivanov.mvikotlin", name = "keepers", version.ref = "mviKotlin" }
mviKotlin-logging = { group = "com.arkivanov.mvikotlin", name = "mvikotlin-logging", version.ref = "mviKotlin" }
mviKotlin-timetravel = { group = "com.arkivanov.mvikotlin", name = "mvikotlin-timetravel", version.ref = "mviKotlin" }
mviKotlin-extensions-reaktive = { group = "com.arkivanov.mvikotlin", name = "mvikotlin-extensions-reaktive", version.ref = "mviKotlin" }

okioCommon = { group = "com.squareup.okio", name = "okio", version.ref = "okio" }
okioNodeJS = { group = "com.squareup.okio", name = "okio-nodefilesystem", version.ref = "okio" }
okioTest = { group = "com.squareup.okio", name = "okio-fakefilesystem", version.ref = "okio" }

arrow-core = { group = "io.arrow-kt", name = "arrow-core", version.ref = "arrow" }
arrow-fx = { group = "io.arrow-kt", name = "arrow-fx-coroutines", version.ref = "arrow" }
arrow-optics = { group = "io.arrow-kt", name = "arrow-optics", version.ref = "arrow" }
arrow-meta = { group = "io.arrow-kt", name = "arrow-meta", version.ref = "arrow" }
arrow-plugin-optics = { group = "io.arrow-kt", name = "arrow-optics-ksp-plugin", version.ref = "arrow" }
arrow-plugin-analysis = { group = "io.arrow-kt", name = "analysis", version.ref = "arrow" }

ktor-client-kotlinx-protobuf = { group = "io.ktor", name = "ktor-serialization-kotlinx-protobuf", version.ref = "ktor" }
ktor-client-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-client-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
ktor-client-serialization = { group = "io.ktor", name = "ktor-client-serialization", version.ref = "ktor" }
ktor-client-encoding = { group = "io.ktor", name = "ktor-client-encoding", version.ref = "ktor" }
ktor-client-content = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-okhttp = { group = "io.ktor", name = "ktor-client-okhttp", version.ref = "ktor" }
ktor-client-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-auth = { group = "io.ktor", name = "ktor-client-auth", version.ref = "ktor" }
ktor-client-android = { group = "io.ktor", name = "ktor-client-android", version.ref = "ktor" }
ktor-client-curl = { group = "io.ktor", name = "ktor-client-curl", version.ref = "ktor" }
ktor-client-apache = { group = "io.ktor", name = "ktor-client-apache", version.ref = "ktor" }
ktor-client-ios = { group = "io.ktor", name = "ktor-client-ios", version.ref = "ktor" }
ktor-client-cio = { group = "io.ktor", name = "ktor-client-cio", version.ref = "ktor" }
ktor-client-js = { group = "io.ktor", name = "ktor-client-js", version.ref = "ktor" }
slf4j-simple = { group = "org.slf4j", name = "slf4j-simple", version.ref = "slf4j" }
brotli-dec = { group = "org.brotli", name = "dec", version = "0.1.2" }


i18n4k-core = { group = "de.comahe.i18n4k", name = "i18n4k-core", version.ref = "i18n4k" }
i18n4k-gradle-plugin = { group = "de.comahe.i18n4k", name = "i18n4k-gradle-plugin", version.ref = "i18n4k" }

fuzzy-wuzzy = { group = "io.github.shabinder", name = "fuzzywuzzy", version = "1.1" }
kermit = { group = "co.touchlab", name = "kermit", version.ref = "kermit" }
kermit-crashlytics = { group = "co.touchlab", name = "kermit-crashlytics", version.ref = "kermit" }
accompanist-inset = { group = "com.google.accompanist", name = "accompanist-insets", version.ref = "accompanist" }
android-app-notifier = { group = "com.github.amitbd1508", name = "AppUpdater", version = "4.1.0" }
jaffree = { group = "com.github.kokorin.jaffree", name = "jaffree", version = "2024.08.29" }
cache4k = { group = "io.github.reactivecircus.cache4k", name = "cache4k", version.ref = "cache4k" }
multiplatform-settings = { group = "com.russhwolf", name = "multiplatform-settings-no-arg", version.ref = "multiplatformSettings" }
multiplatform-settings-datastore = { group = "com.russhwolf", name = "multiplatform-settings-datastore", version.ref = "multiplatformSettings" }
multiplatform-settings-coroutines = { group = "com.russhwolf", name = "multiplatform-settings-coroutines", version.ref = "multiplatformSettings" }
multiplatform-settings_serialization = { group = "com.russhwolf", name = "multiplatform-settings-serialization", version.ref = "multiplatformSettings" }

androidx-datastore-core = { group = "androidx.datastore", name = "datastore-core", version = "1.1.7" }
androidx-datastore-preferences = { group = "androidx.datastore", name = "datastore-preferences", version = "1.1.7" }

stately-common = { group = "co.touchlab", name = "stately-common", version.ref = "statelyVersion" }
stately-concurrency = { group = "co.touchlab", name = "stately-concurrency", version.ref = "statelyVersion" }
stately-isolate = { group = "co.touchlab", name = "stately-isolate", version.ref = "statelyIsoVersion" }
stately-iso-collections = { group = "co.touchlab", name = "stately-iso-collections", version.ref = "statelyIsoVersion" }
stately-concurrentCollections = { group = "co.touchlab", name = "stately-concurrent-collections", version.ref = "statelyVersion" }

sqldelight-paging = { group = "app.cash.sqldelight", name = "androidx-paging3-extensions", version.ref = "sqlDelight" }
sqldelight-runtime = { group = "app.cash.sqldelight", name = "runtime", version.ref = "sqlDelight" }
sqldelight-coroutines-extension = { group = "app.cash.sqldelight", name = "coroutines-extensions", version.ref = "sqlDelight" }
sqldelight-gradle-plugin = { group = "app.cash.sqldelight", name = "gradle-plugin", version.ref = "sqlDelight" }
sqldelight-driver = { group = "app.cash.sqldelight", name = "sqlite-driver", version.ref = "sqlDelight" }
sqldelight-android-driver = { group = "app.cash.sqldelight", name = "android-driver", version.ref = "sqlDelight" }
sqldelight-native-driver = { group = "app.cash.sqldelight", name = "native-driver", version.ref = "sqlDelight" }
sqldelight-web-driver = { group = "app.cash.sqldelight", name = "web-worker-driver", version.ref = "sqlDelight" }
sqlite-jdbc-driver = { group = "org.xerial", name = "sqlite-jdbc", version.ref = "sqliteJdbcDriver" }

koin-core = { group = "io.insert-koin", name = "koin-core", version.ref = "koin" }
koin-test = { group = "io.insert-koin", name = "koin-test", version.ref = "koin" }
koin-android = { group = "io.insert-koin", name = "koin-android", version.ref = "koin" }
koin-androidx-compose = { group = "io.insert-koin", name = "koin-androidx-compose", version.ref = "koin" }

androidx-activity = { group = "androidx.activity", name = "activity-compose", version = "1.10.1" }
androidx-core = { group = "androidx.core", name = "core-ktx", version = "1.17.0" }
androidx-material = { group = "androidx.compose.material", name = "material", version = "1.9.0" }
androidx-profileInstaller = { group = "androidx.profileinstaller", name = "profileinstaller", version = "1.4.1" }
androidx-startUp = { group = "androidx.startup", name = "startup-runtime", version = "1.2.0" }
androidx-palette = { group = "androidx.palette", name = "palette-ktx", version = "1.0.0" }
androidx-coroutines = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "coroutines" }
androidx-gradle-plugin = { group = "com.android.tools.build", name = "gradle", version.ref = "androidGradle" }
androidx-lifecycle-service = { group = "androidx.lifecycle", name = "lifecycle-service", version.ref = "androidxLifecycle" }
androidx-lifecycle-livedata = { group = "androidx.lifecycle", name = "lifecycle-livedata-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-common = { group = "androidx.lifecycle", name = "lifecycle-common-java8", version.ref = "androidxLifecycle" }
androidx-lifecycle-runtime = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-extensions = { group = "androidx.lifecycle", name = "lifecycle-extensions", version = "2.2.0" }

androidx-desugar = { group = "com.android.tools", name = "desugar_jdk_libs", version.ref = "desugar" }
androidx-media3-exoplayer = { group = "androidx.media3", name = "media3-exoplayer", version.ref = "androidxMedia3" }
androidx-media3-exoplayer-hls = { group = "androidx.media3", name = "media3-exoplayer-hls", version.ref = "androidxMedia3" }
androidx-media3-exoplayer-dash = { group = "androidx.media3", name = "media3-exoplayer-dash", version.ref = "androidxMedia3" }
androidx-media3-ui = { group = "androidx.media3", name = "media3-ui", version.ref = "androidxMedia3" }
androidx-media3-session = { group = "androidx.media3", name = "media3-session", version.ref = "androidxMedia3" }
androidx-media3-common = { group = "androidx.legacy", name = "legacy-support-v4", version = "1.0.0" }

androidx-junit = { group = "androidx.test.ext", name = "junit", version = "1.3.0" }
androidx-expresso = { group = "androidx.test.espresso", name = "espresso-core", version = "3.7.0" }
androidx-test-uiautomator = { group = "androidx.test.uiautomator", name = "uiautomator", version = "2.3.0" }
androidx-benchmark-macro-junit = { group = "androidx.benchmark", name = "benchmark-macro-junit4", version = "1.4.0" }

#noinspection GradleDependency // UpsideDownCake Android 14
androidx-splash = { group = "androidx.core", name = "core-splashscreen", version = "1.0.1" }

androidx-glance = { group = "androidx.glance", name = "glance-appwidget", version.ref = "androidGlance" }
androidx-glance-material3 = { group = "androidx.glance", name = "glance-material3", version.ref = "androidGlance" }
androidx-glance-material = { group = "androidx.glance", name = "glance-material", version.ref = "androidGlance" }

androidx-credential = { group = "androidx.credentials", name = "credentials", version.ref = "googleCreds" }
androidx-credential-auth = { group = "androidx.credentials", name = "credentials-play-services-auth", version.ref = "googleCreds" }
androidx-credential-googleid = { group = "com.google.android.libraries.identity.googleid", name = "googleid", version = "1.1.1" }

paging-common = { group = "app.cash.paging", name = "paging-common", version.ref = "paging" }
paging-compose = { group = "app.cash.paging", name = "paging-compose-common", version.ref = "paging" }
composeUi-window = { group = "androidx.window", name = "window", version = "1.4.0" }
composeUi-windowSize = { group = "dev.chrisbanes.material3", name = "material3-window-size-class-multiplatform", version = "0.5.0" }
composeUi-waveslider = { group = "ir.mahozad.multiplatform", name = "wavy-slider", version = "2.1.0" }
composeUi-window-styler = { group = "com.mayakapps.compose", name = "window-styler", version = "0.3.3-SNAPSHOT" }

coil3-ktor3 = { group = "io.coil-kt.coil3", name = "coil-network-ktor3", version.ref = "coil" }
coil3-compose = { group = "io.coil-kt.coil3", name = "coil-compose", version.ref = "coil" }
coil3-core = { group = "io.coil-kt.coil3", name = "coil-core", version.ref = "coil" }
coil3-svg = { group = "io.coil-kt.coil3", name = "coil-svg", version.ref = "coil" }
coil3 = { group = "io.coil-kt.coil3", name = "coil", version.ref = "coil" }

leak-canary = { group = "com.squareup.leakcanary", name = "leakcanary-android", version = "2.14" }
junit = { group = "junit", name = "junit", version = "4.13.2" }

ktlint-gradle = { group = "org.jlleitschuh.gradle", name = "ktlint-gradle", version.ref = "ktLint" }
konnection = { group = "dev.tmapps", name = "konnection", version.ref = "konnection" }

jna-platform = { module = "net.java.dev.jna:jna-platform-jpms", version.ref = "jna" }
jna = { module = "net.java.dev.jna:jna-jpms", version.ref = "jna" }

filekit-coil = { module = "io.github.vinceglb:filekit-coil", version.ref = "filekit" }
filekit-core = { group = "io.github.vinceglb", name = "filekit-core", version.ref = "filekit" }
filekit-dialogs = { module = "io.github.vinceglb:filekit-dialogs", version.ref = "filekit" }
filekit-dialogs-compose = { module = "io.github.vinceglb:filekit-dialogs-compose", version.ref = "filekit" }

zipline = { group = "io.github.shabinder", name = "zipline", version.ref = "zipline" }
zipline-gradlePlugin = { group = "io.github.shabinder", name = "zipline-gradle-plugin", version.ref = "zipline" }
zipline-loader = { group = "io.github.shabinder", name = "zipline-loader", version.ref = "zipline" }
zipline-profiler = { group = "io.github.shabinder", name = "zipline-profiler", version.ref = "zipline" }

publishing-nexus-gradle = { group = "io.github.gradle-nexus", name = "publish-plugin", version.ref = "nexusGradle" }

firebase-bom = { group = "com.google.firebase", name = "firebase-bom", version = "34.1.0" }
firebase-analytics = { group = "com.google.firebase", name = "firebase-analytics" }
firebase-crashlytics = { group = "com.google.firebase", name = "firebase-crashlytics" }
firebase-crashlytics-ndk = { group = "com.google.firebase", name = "firebase-crashlytics-ndk" }
firebase-plugins-crashlytics = { group = "com.google.firebase", name = "firebase-crashlytics-gradle", version = "3.0.6" }
google-services = { group = "com.google.gms", name = "google-services", version = "4.4.3" }

firebase-remote-config = { group = "dev.gitlive", name = "firebase-config", version = "2.2.0" }

kmp-notification = { group = "io.github.mirzemehdi", name = "kmpnotifier", version = "1.6.0" }

supabase-bom = { group = "io.github.jan-tennert.supabase", name = "bom", version = "3.2.2" }
supabase-postgrest = { group = "io.github.jan-tennert.supabase", name = "postgrest-kt" }
supabase-auth = { group = "io.github.jan-tennert.supabase", name = "auth-kt" }
supabase-realtime = { group = "io.github.jan-tennert.supabase", name = "realtime-kt" }
supabase-storage = { group = "io.github.jan-tennert.supabase", name = "storage-kt" }
supabase-compose-auth = { group = "io.github.jan-tennert.supabase", name = "compose-auth" }
supabase-compose-auth-ui = { group = "io.github.jan-tennert.supabase", name = "compose-auth-ui" }
supabase-functions = { group = "io.github.jan-tennert.supabase", name = "functions-kt" }

ffmpeg-kit-exceptions = { group = "com.arthenica", name = "smart-exception-java", version = "0.2.1" }
ndk-libunwind = { group = "ru.ivanarh.ndcrash", name = "jndcrash-libunwind", version = "0.8" }
android-phoenix = { group = "com.jakewharton", name = "process-phoenix", version = "3.0.0" }

desktop-vlcj = { group = "uk.co.caprica", name = "vlcj", version = "4.11.0" }
desktop-json = { group = "org.json", name = "json", version = "20250517" }
desktop-amplitude = { group = "com.amplitude", name = "java-sdk", version = "1.12.4" }
desktop-jcef = { group = "me.friwi", name = "jcefmaven", version = "135.0.20" }

revenuecat = { group = "com.revenuecat.purchases", name = "purchases", version = "9.3.0" }
skrapeit = { group = "it.skrape", name = "skrapeit", version = "1.2.2" }

store = "org.mobilenativefoundation.store:store5:5.1.0-alpha06"

moko-resources = { group = "dev.icerock.moko", name = "resources", version.ref = "mokoResources" }
moko-resources-compose = { group = "dev.icerock.moko", name = "resources-compose", version.ref = "mokoResources" }
moko-resources-generator = { group = "dev.icerock.moko", name = "resources-generator", version.ref = "mokoResources" }
moko-resources-gradle = { group = "dev.icerock.moko", name = "multiplatform-resources", version.ref = "mokoResources" }
mavenPublish-gradle-plugin = { module = "com.vanniktech:gradle-maven-publish-plugin", version.ref = "mavenPublish" }

#newpipe-extractor = { group = "com.github.TeamNewPipe", name = "NewPipeExtractor", version = "v0.24.3" }
newpipe-extractor = { group = "com.github.libre-tube", name = "NewPipeExtractor", version = "70abbdb" }
kotlin-onetimepassword = { module = "dev.turingcomplete:kotlin-onetimepassword", version = "2.4.1" }

[bundles]
arrow = ["arrow-core", "arrow-fx"]
coil = ["coil3-core", "coil3-ktor3", "coil3-compose", "coil3-svg", "coil3"]
ktor = ["ktor-client-core", "ktor-client-json", "ktor-client-auth", "ktor-client-logging", "ktor-client-serialization", "ktor-client-content", "ktor-client-encoding"]
stately = ["stately-concurrency", "stately-concurrentCollections"]
androidx-lifecycle = ["androidx-lifecycle-service", "androidx-lifecycle-common", "androidx-lifecycle-runtime", "androidx-lifecycle-livedata", "androidx-lifecycle-extensions"]
androidx-common = ["androidx-activity", "androidx-core", "androidx-splash"]
androidx-test = ["androidx-junit", "androidx-expresso", "androidx-test-uiautomator", "androidx-benchmark-macro-junit"]
androidx-creds = ["androidx-credential", "androidx-credential-auth", "androidx-credential-googleid"]
androidx-media3 = ["androidx-media3-session", "androidx-media3-exoplayer", "androidx-media3-ui", "androidx-media3-common"]
paging-compose = ["paging-common", "paging-compose"]
kotlin-test = ["kotlin-kotlinTestCommon", "kotlin-kotlinTestAnnotationsCommon", "kotlin-kotlinTestCoroutine", "kotlin-kotlinTest"]
sqldelight = ["sqldelight-runtime", "sqldelight-coroutines-extension", "sqldelight-paging"]
mviKotlin = ["mviKotlin-dep", "mviKotlin-main", "mviKotlin-coroutines", "mviKotlin-logging", "mviKotlin-timetravel"]
kotlinx = ["kotlinx-coroutines", "kotlinx-serialization-json", "kotlinx-atomicfu", "kotlinx-datetime", "kotlinx-immutableLists"]
essenty = ["essenty-lifecycle", "essenty-instanceKeeper", "essenty-backHandler", "essenty-stateKeeper", "essenty-lifecycle-coroutines"]
decompose = ["decompose-dep", "decompose-extensions-compose"]
koin-android = ["koin-androidx-compose", "koin-android"]
settings = ["multiplatform-settings", "multiplatform-settings-coroutines", "multiplatform-settings_serialization", "multiplatform-settings-datastore"]
supabase = ["supabase-postgrest", "supabase-auth", "supabase-realtime", "supabase-storage", "supabase-functions", "supabase-compose-auth"]
datastore = ["androidx-datastore-core", "androidx-datastore-preferences"]

[plugins]
android-library = { id = "com.android.library", version.ref = "androidGradle" }
android-application = { id = "com.android.application", version.ref = "androidGradle" }

compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "jbCompose" }

kotlin-parcelize = { id = "kotlin-parcelize", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-android = { id = "kotlin-android", version.ref = "kotlin" }
kotlin-multiplatform = { id = "kotlin-multiplatform", version.ref = "kotlin" }
kotlin-kapt = { id = "kotlin-kapt", version.ref = "kotlin" }

zipline-gradle = { id = "io.github.shabinder", version.ref = "zipline" }
#zipline-gradle = { id = "app.cash.zipline", version.ref = "zipline" }

slqDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
baselineProfile = { id = "androidx.baselineprofile", version = "1.4.0" }

ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktLint" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
moko = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "mokoResources" }
maven-publish-base = { id = "com.vanniktech.maven.publish.base", version.ref = "mavenPublish" }
maven-publish-config = { id = "com.vanniktech.maven.publish", version.ref = "mavenPublish" }
version-catalog = { id = "version-catalog" }
